
******************************new version****************************************
vamos a crear un forms.py dentro de apps usuario 'es lo mas logico'
from django.contrib.auth.forms import AuthenticationForm **forms default de django
file forms.py:
class FormularioLogin(AuthenticationForm):
    def __init__(self,*args,**kwargs):
        super(FormularioLogin,self).__init__(*args, **kwargs)
        self.fields['username'].widget.attr['class']= 'form-control'
        self.fields['username'].widget.attr['placeholder']= 'Nombre de Usuario'
        self.fields['password'].widget.attr['class']= 'form-control'
        self.fields['password'].widget.attr['placeholder']= 'Contrasena'
file views:
from django.views.generic.edit import FormView
+
from django.utils.decorators import method_decorator  ** esto es mas avanzado, son medidas de seguridad
from django.views.decorators.cache import never_cache ** para que no se almacene cache
from django.views.decorators.csrf import csrf_protect **
*
from django.contrib.auth import login

class Login(FormView):
    template_name= 'login.html'
    form_class = FormularioLogin # en el template se vera como un {{ form }}
    success_url= reverse_lazy('index')# como existe esta redireccion ya no necesito las que se colocan en le settings LOGIN_REDIRECT_URL
    #never_cache 
    #csrf_protect
    @method_decorator(csrf_protect)
    @method_decorator(never_cache)
    def dispatch(self,*args,**kwargs):
        if request.user.is_authenticated:
            return HttpResponseRedirect(self.get_success_url())
        else:
            return super(Login,self).dispatch(request,*args,**kwargs)
    
    def form_valid(self, form):# este metodo es encargado de validar el formulario de login, el form es
              		       # el form_class de arriba, y este metodo se llamara antes del post
        login(self.request, form.get_user()) # esta es la funcionabilidad extra expresada abajo
        return super(login,self).form_valid(form)

le agregamos una funcionabilidad extra, django sabes que quiero que con los datos que te pase me inicies una
sesion.... para esto necesitamos la funcion login from django.contrib.auth import login

file urls:
from apps.usuarios.views import Login 

y para el LOGOUT:
file views: la misma vista de arriba
from django.contrib.auth import login, logout
def logoutUsuario(request):
    logout(request)
    return HttpResponseRedirect('/accounts/login/')
file urls:
path('logout/',logoutUsuario, name= 'logout'),



*********************************************************************************
-. protejer la rutas cualquier puede acceder
django nos provee de un login y logout que brinda todo el tema de seguridad

************************************************html************************************************************************
login.html --->
</head>
<body class="bg-dark">
    <div class="sufee-login d-flex align-content-center flex-wrap">
        <div class="container">
            <div class="login-content">
                <div class="login-logo">
                    <a href="index.html">
                        <img class="align-content" src="images/logo.png" alt="">
                    </a>
                </div>
                <div class="login-form">
                    <form method="POST">
                      {% csrf_token %}
                        <div class="form-group">
                          {% if form.error_messages %}
                              <div class="alert alert-danger alert-dismissible" role="alert">
                                <button type="button" class="close" data-dismiss = "alert" aria-label = "Close">
                                  <span aria-hidden = "true">&times;</span>
                                </button>
                                <strong>Advertencia: </strong> {{ form.get_invalid_login_error }}
                              </div>
                          {% endif %}
                            <label>Nombre de usuario</label>
                            {{ form.username }}
                        </div>
                        <div class="form-group">
                            <label>Contraseña</label>
                            {{ form.password }}
                        </div>
                        <button type="submit" class="btn btn-success btn-flat m-b-30 m-t-30">Iniciar Sesión</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/jquery@2.2.4/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.4/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-match-height@0.7.2/dist/jquery.matchHeight.min.js"></script>
    <script src="{% static 'js/main.js' %}"></script>

</body>
</html>
************************************************************************************************************************
************************************Login con moises sepulveda*********************************************************
lo primero que hace es una carpeta dentro de templates/registration/login.html
path('account/', include('django.contrib.auth.urls')), en la urls global URL
armas el login en html
<!DOCTYPE html>
<html lang="en">
<head>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-12 col-md-6 offset-md-3">
                <div class="card">
                    <div class="card-body">
                        <h2>Ingresa tus credenciales</h2>
                        <hr>
                        <form action="" method="post">
                            {% csrf_token %}
                            {{ form }}
                            <input type="submit" value="Ingresar">


ya con eso metiendo esto debe salir el formulario http://127.0.0.1:8000/accounts/login/  ---> te lleva a una ruta que no funciona
debes configurar el settings colocando lo siguiente:
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
*****para ponerlo en la barra de navegacion
</li>
   {% if user.is_authenticated %}
      <li>
        <a href="{% url 'logout' %}">Cerrar sesion</a>
      </li>
       <li>
         <a href="#">@{{ user.username }}</a>
       </li>
   {% else %}
        <li>
         <a href="{% url 'login' %}">Login</a>
        </li>
   {% endif %}
la pagina de iniciar secion o login se le debe meter bootstrap
<form action="" method="post">
     {% csrf_token %}
     {{ form | crispy }}
     <a href="{% url 'home' %}">Ir a inicio</a>
     <input type="submit" value="Ingresar" class="btn btn-success float-right">





