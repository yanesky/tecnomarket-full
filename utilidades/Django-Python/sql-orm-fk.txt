******************TEMAS A CONSIDERAR*****************************
-. FOREIGNKEY
**********************************************************
from django.db import models
class Empresa(models.Model):
	nombre = models.CharField(max_length=20)
	fundacion = models.IntegerField()
	#empleados -> foreignKey -> programador
	def __str__(self):
		return self.nombre
class Lenguaje(models.Model):
	nombre = models.CharField(max_length=40)
	creador = models.CharField(max_length=40, null=True)

	def __str__(self):
		return self.nombre

class Programador(models.Model):
	nombre = models.CharField(max_length=40)
	edad = models.IntegerField(null=True)
	empresa = models.ForeignKey(Empresa, on_delete=models.CASCADE, related_name="empleados")
	lenguaje = models.ManyToManyField(Lenguaje)

	def __str__(self):
		return self.nombre

****Busqueda practica***********
java = Lenguaje.objects.create(nombre='java', creador='James Gosling')
c = Lenguaje.objects.create(nombre='c', creador='Dennis Ritchie')
python = Lenguaje.objects.create(nombre='python', creador='Guido van Rossum')
haskell = Lenguaje.objects.create(nombre='haskell')
javascript = Lenguaje.objects.create(nombre='javascript', creador='Brendan Eich')
basic = Lenguaje.objects.create(nombre='basic', creador='John G. Kemeny')
cplusplus = Lenguaje.objects.create(nombre='c++', creador='Bjarne Stroustrup')
csharp = Lenguaje.objects.create(nombre='c#')
swift = Lenguaje.objects.create(nombre='swift', creador='Chris Lattner')
kotlin = Lenguaje.objects.create(nombre='kotlin')

google = Empresa.objects.create(nombre='Google', fundacion=1998)
microsoft = Empresa.objects.create(nombre='Microsoft', fundacion=1975)
apple = Empresa.objects.create(nombre='Apple', fundacion=1975)
amazon = Empresa.objects.create(nombre='Amazon', fundacion=1999)
ebay = Empresa.objects.create(nombre='Ebay', fundacion=1997)
facebook = Empresa.objects.create(nombre='Facebook', fundacion=2004)
twitter = Empresa.objects.create(nombre='Twitter', fundacion=2009)
yahoo = Empresa.objects.create(nombre='Yahoo', fundacion=1996)
snapchat = Empresa.objects.create(nombre='Snapchat', fundacion=2012)
instagram = Empresa.objects.create(nombre='Instagram', fundacion=2010)

developer1= Programador.objects.create(nombre='John', edad=22, empresa= apple)
developer2= Programador.objects.create(nombre='Juan', edad=22, empresa= apple)
developer3= Programador.objects.create(nombre='Jose', edad=25, empresa=twitter)
developer4= Programador.objects.create(nombre='Edgar', edad=26, empresa=twitter)
developer5= Programador.objects.create(nombre='Mark', edad=26, empresa = facebook)
developer6= Programador.objects.create(nombre='Venus', edad=28, empresa=snapchat)
developer7= Programador.objects.create(nombre='Sol', edad=28, empresa=snapchat)
developer8= Programador.objects.create(nombre='Andrea', edad=29, empresa=yahoo)
developer9= Programador.objects.create(nombre='Cardi', edad=23, empresa=amazon)
developer10= Programador.objects.create(nombre='Maria', edad=23, empresa=google)
developer11= Programador.objects.create(nombre='Joel', edad=24, empresa=google)
developer12= Programador.objects.create(nombre='Salman', edad=25, empresa=google)
developer13= Programador.objects.create(nombre='Tabata', edad=27, empresa=ebay)


**********temas a practicar*************
related_name, xxxxx_set (foreign>tabla=si, tabla>foreign = no)
objects.all(); objects.all()[0:2]; objecs.exclude(key='x'); objects.get(id=1); objects.get(id=1).exits()
objects.filter(key__exact= 'value'); objects.filter(key__iexact= 'value'); objects.filter(key='value').get()
objects.filter(key='value'); objects.filter(key__gt,key__gts,key__lt,key__lts,key__contains,key__in=['x','y','z'])
objects.filter(key__startswith, key__endswith,, key__isnull=True, key__isnull=False)
objects.filter(key__gte=23).filter(empresa--nombre__iexact='google');objects.count(); objects.all().order_by('x')

****aprender documentacion***** 
model field reference; make queries
